---
- name: Provision EC2 Instance on AWS
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Create security group 
      amazon.aws.ec2_security_group:
        name: ansible-sg
        description: "Security group for Ansible automation"
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0  # Allow SSH from anywhere (adjust for security)
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0  # Allow HTTP (optional)
        tags:
          Name: ansible-sg
      register: sg_result
    - name: Launch EC2 instance using updated Terraform-like config
      amazon.aws.ec2_instance:
        name: Automated-instance-terraform
        key_name: ansible_key
        key_material: "{{ lookup('file', '/home/ubuntu/keys/ansibel_key.pem') }}"
        instance_type: t2.micro
        image_id: ami-020cba7c55df1f615   # Ubuntu
        region: us-east-1
        wait: yes
        count: 1

        # Use default VPC (omit subnet if not needed)
        # You can leave out subnet if using default

        security_group: ansible-sg  # name of the SG, just like in your Terraform

        tags:
          Name: Automated-instance-terraform
          Environment: dev

      register: ec2_result

    - name: Show result of EC2 provisioning
      debug:
        var: ec2_result
