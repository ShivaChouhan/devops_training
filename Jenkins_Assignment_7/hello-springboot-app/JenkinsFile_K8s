pipeline {
    agent { label "java-node" }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/ShivaChouhan/devops_training.git'
            }
        }
        stage('Build JAR') {
            steps {
                dir('Jenkins_Assignment_7/hello-springboot-app') {
                    sh 'mvn clean package'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('Jenkins_Assignment_7/hello-springboot-app') {
                    sh 'eval $(minikube docker-env) && docker build -t hello-springboot-app:latest .'
                }
            }
        }
        stage('Deploy to Minikube') {
            steps {
                dir('Jenkins_Assignment_7/hello-springboot-app') {
                    echo 'Deploying to Minikube...'

                    // Apply deployment and service to Minikube
                    sh ''' 
                        eval $(minikube docker-env)
                        kubectl delete deployment hello-springboot-app || true
                        kubectl apply -f deployment.yaml 
                    '''
                }
            }
        }
    }
    post {
        always {
            // Optionally, show service URL
            sh ''' 
                eval $(minikube docker-env)
                echo "Service URL:"
                minikube service hello-springboot-app-service --url || true 
            '''
        }
    }
}


