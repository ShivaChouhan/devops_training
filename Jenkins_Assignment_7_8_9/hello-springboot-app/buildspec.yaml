
version: 0.2

env:
  variables:
    REPOSITORY_NAME: "hello-springboot-app"
    AWS_REGION: "us-east-1"
    EKS_CLUSTER_NAME: "wonderful-rock-potato"
    # MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

phases:

  pre_build:
    commands:
      - echo "Setting up AWS credentials..."
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "Checking/creating ECR repository..."
      - aws ecr describe-repositories --repository-names $REPOSITORY_NAME --region $AWS_REGION || aws ecr create-repository --repository-name $REPOSITORY_NAME --region $AWS_REGION
      - echo "Generating Docker tag..."
      - export DOCKER_TAG=$(date +%Y%m%d%H%M%S)-$(echo $CODEBUILD_BUILD_ID | cut -d':' -f1 | tr -cd '[:alnum:]')

  build:
    commands:
      - echo "Building Java application..."
      - cd Jenkins_Assignment_7/hello-springboot-app
      - mvn clean package
      - echo "Building Docker image with tag $DOCKER_TAG..."
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$DOCKER_TAG .

  post_build:
    commands:
      - pwd
      - echo "Pushing Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$DOCKER_TAG
      - echo "Configuring kubectl..."
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
      
      - echo "Making deployment..."
      - kubectl apply -f deployment.yaml
      - echo "Updating deployment..."
      - kubectl set image deployment/hello-springboot-app hello-springboot-app=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME:$DOCKER_TAG
      - kubectl rollout status deployment/hello-springboot-app --timeout=60s
      - echo "Verifying deployment..."
      - kubectl get deployments
     
